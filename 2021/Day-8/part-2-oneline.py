# fmt: off
print((defs := dict(zip(map(frozenset, ("abcefg", "cf", "acdeg", "acdfg", "bcdf", "abdfg", "abdefg", "acf", "abcdefg", "acbdfg")), range(10)))) and sum((digits := next(x for x in ((lambda wmap: {inp: defs.get(frozenset(wmap[i] for i in inp)) for inp in inps})(dict(zip("abcdefg", comb))) for comb in __import__("itertools").permutations("abcdefg")) if all(v is not None for v in x.values()))) and int("".join(str(digits[o]) for o in outs)) for inps, outs in [tuple(map(lambda s: tuple(map(frozenset, s.split(" "))), l.split(" | "))) for l in open("input.txt", "r").read().splitlines()]))